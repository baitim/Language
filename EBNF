Data ::= {Function}

Function ::= "func" Identifier "<" {Identifier} ">" PrisonerStatement

BigStatement ::= Statement | PrisonerStatement
PrisonerStatement = "{" {BigStatement} "}"
Statement ::= Assign "end" | If | While | Return "end"

Assign ::= ["declarate"] Identifier "assign" Expression
Return ::= "return" Expression end

If    ::= "if"    Expression ":" BigStatement ["else" BigStatement]
While ::= "while" Expression ":" BigStatement

Expression  ::= Add {"less" | "less_equal" | "equal" | "unequal" | "more_equal" | "more"} Add
Add         ::= Mul {("plus" | "minus") Mul}
Mul         ::= Pow {("multiply" | "divide") Pow}
Pow         ::= Operand {"**" Operand}

Operand     ::= "(" Expression ")" | Operand_
Operand_ ::= Identifier | Number

Identifier ::= {[A-Z] | [a-z] | "_"} {[A-Z] | [a-z] | "_" | [0-9]}
Number ::= ["-"] [0-9]{[0-9]}